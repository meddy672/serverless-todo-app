{"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/helpers/helper.js":{"path":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/helpers/helper.js","statementMap":{"0":{"start":{"line":1,"column":19},"end":{"line":1,"column":64}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":72}},"2":{"start":{"line":5,"column":14},"end":{"line":5,"column":24}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":76}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"5":{"start":{"line":9,"column":0},"end":{"line":11,"column":2}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":35}},"7":{"start":{"line":12,"column":0},"end":{"line":14,"column":2}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":35}},"9":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":35}},"11":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":35}},"13":{"start":{"line":21,"column":15},"end":{"line":23,"column":2}},"14":{"start":{"line":24,"column":0},"end":{"line":24,"column":39}}},"fnMap":{"0":{"name":"TimeProcessor","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":22}},"loc":{"start":{"line":3,"column":45},"end":{"line":3,"column":48}},"line":3},"1":{"name":"getTime","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":16}},"loc":{"start":{"line":4,"column":19},"end":{"line":7,"column":1}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":39},"end":{"line":9,"column":40}},"loc":{"start":{"line":9,"column":61},"end":{"line":11,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":48},"end":{"line":12,"column":49}},"loc":{"start":{"line":12,"column":69},"end":{"line":14,"column":1}},"line":12},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":44},"end":{"line":15,"column":45}},"loc":{"start":{"line":15,"column":65},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":45},"end":{"line":18,"column":46}},"loc":{"start":{"line":18,"column":66},"end":{"line":20,"column":1}},"line":18}},"branchMap":{},"s":{"0":1,"1":1,"2":3,"3":3,"4":1,"5":1,"6":2,"7":1,"8":0,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1},"f":{"0":1,"1":3,"2":2,"3":0,"4":1,"5":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/helpers/helper.js","sources":["/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/helpers/helper.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,YAAY,CAAA;AAChE,IAAI,gBAAgB,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,gBAAgB,CAAA;AAExE,SAAS,aAAa,CAAC,aAAa,EAAE,KAAK,IAAG,CAAC;AAE/C,SAAS,OAAO;IACd,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAA;IACpB,OAAO,GAAG,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,UAAU,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,UAAU,EAAE,CAAA;AACzE,CAAC;AAED,aAAa,CAAC,SAAS,GAAG,IAAI,gBAAgB,EAAE,CAAA;AAEhD,aAAa,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,KAAK,EAAE,GAAG;IACzD,OAAO,OAAO,EAAE,GAAG,KAAK,GAAG,GAAG,CAAA;AAChC,CAAC,CAAA;AAED,aAAa,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAU,IAAI,EAAE,GAAG;IACjE,OAAO,OAAO,EAAE,GAAG,KAAK,GAAG,GAAG,CAAA;AAChC,CAAC,CAAA;AAED,aAAa,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,IAAI,EAAE,GAAG;IAC7D,OAAO,OAAO,EAAE,GAAG,KAAK,GAAG,GAAG,CAAA;AAChC,CAAC,CAAA;AAED,aAAa,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,IAAI,EAAE,GAAG;IAC9D,OAAO,OAAO,EAAE,GAAG,KAAK,GAAG,GAAG,CAAA;AAChC,CAAC,CAAA;AAED,IAAI,QAAQ,GAAG,IAAI,YAAY,CAAC;IAC9B,gBAAgB,EAAE,CAAC,aAAa,CAAC;CAClC,CAAC,CAAA;AAEF,OAAO,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA","sourcesContent":["var SpecReporter = require('jasmine-spec-reporter').SpecReporter\nvar DisplayProcessor = require('jasmine-spec-reporter').DisplayProcessor\n\nfunction TimeProcessor(configuration, theme) {}\n\nfunction getTime() {\n  var now = new Date()\n  return now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds()\n}\n\nTimeProcessor.prototype = new DisplayProcessor()\n\nTimeProcessor.prototype.displaySuite = function (suite, log) {\n  return getTime() + ' - ' + log\n}\n\nTimeProcessor.prototype.displaySuccessfulSpec = function (spec, log) {\n  return getTime() + ' - ' + log\n}\n\nTimeProcessor.prototype.displayFailedSpec = function (spec, log) {\n  return getTime() + ' - ' + log\n}\n\nTimeProcessor.prototype.displayPendingSpec = function (spec, log) {\n  return getTime() + ' - ' + log\n}\n\nvar reporter = new SpecReporter({\n  customProcessors: [TimeProcessor],\n})\n\njasmine.getEnv().addReporter(reporter)"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f3b7dc55af1ff70f367cf037157ee585663c38d1"},"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/businessLogic/todo.spec.ts":{"path":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/businessLogic/todo.spec.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":15},"end":{"line":12,"column":54}},"14":{"start":{"line":13,"column":17},"end":{"line":13,"column":50}},"15":{"start":{"line":14,"column":21},"end":{"line":14,"column":62}},"16":{"start":{"line":15,"column":13},"end":{"line":23,"column":1}},"17":{"start":{"line":24,"column":20},"end":{"line":28,"column":1}},"18":{"start":{"line":29,"column":14},"end":{"line":48,"column":1}},"19":{"start":{"line":49,"column":33},"end":{"line":56,"column":1}},"20":{"start":{"line":58,"column":0},"end":{"line":226,"column":3}},"21":{"start":{"line":59,"column":4},"end":{"line":101,"column":7}},"22":{"start":{"line":60,"column":8},"end":{"line":83,"column":12}},"23":{"start":{"line":60,"column":25},"end":{"line":83,"column":10}},"24":{"start":{"line":61,"column":12},"end":{"line":61,"column":62}},"25":{"start":{"line":62,"column":12},"end":{"line":62,"column":87}},"26":{"start":{"line":63,"column":12},"end":{"line":63,"column":39}},"27":{"start":{"line":64,"column":28},"end":{"line":67,"column":13}},"28":{"start":{"line":68,"column":12},"end":{"line":75,"column":14}},"29":{"start":{"line":76,"column":12},"end":{"line":82,"column":13}},"30":{"start":{"line":77,"column":16},"end":{"line":77,"column":78}},"31":{"start":{"line":78,"column":16},"end":{"line":78,"column":56}},"32":{"start":{"line":81,"column":16},"end":{"line":81,"column":31}},"33":{"start":{"line":84,"column":8},"end":{"line":86,"column":11}},"34":{"start":{"line":85,"column":12},"end":{"line":85,"column":38}},"35":{"start":{"line":87,"column":8},"end":{"line":91,"column":11}},"36":{"start":{"line":88,"column":12},"end":{"line":88,"column":48}},"37":{"start":{"line":89,"column":12},"end":{"line":89,"column":48}},"38":{"start":{"line":90,"column":12},"end":{"line":90,"column":57}},"39":{"start":{"line":92,"column":8},"end":{"line":94,"column":11}},"40":{"start":{"line":93,"column":12},"end":{"line":93,"column":47}},"41":{"start":{"line":95,"column":8},"end":{"line":97,"column":11}},"42":{"start":{"line":96,"column":12},"end":{"line":96,"column":90}},"43":{"start":{"line":98,"column":8},"end":{"line":100,"column":11}},"44":{"start":{"line":99,"column":12},"end":{"line":99,"column":85}},"45":{"start":{"line":102,"column":4},"end":{"line":128,"column":7}},"46":{"start":{"line":103,"column":8},"end":{"line":115,"column":12}},"47":{"start":{"line":103,"column":25},"end":{"line":115,"column":10}},"48":{"start":{"line":104,"column":12},"end":{"line":104,"column":62}},"49":{"start":{"line":105,"column":12},"end":{"line":105,"column":83}},"50":{"start":{"line":106,"column":12},"end":{"line":106,"column":39}},"51":{"start":{"line":107,"column":39},"end":{"line":107,"column":43}},"52":{"start":{"line":108,"column":12},"end":{"line":114,"column":13}},"53":{"start":{"line":109,"column":16},"end":{"line":109,"column":56}},"54":{"start":{"line":110,"column":16},"end":{"line":110,"column":70}},"55":{"start":{"line":113,"column":16},"end":{"line":113,"column":31}},"56":{"start":{"line":116,"column":8},"end":{"line":118,"column":11}},"57":{"start":{"line":117,"column":12},"end":{"line":117,"column":50}},"58":{"start":{"line":119,"column":8},"end":{"line":121,"column":11}},"59":{"start":{"line":120,"column":12},"end":{"line":120,"column":116}},"60":{"start":{"line":122,"column":8},"end":{"line":124,"column":11}},"61":{"start":{"line":123,"column":12},"end":{"line":123,"column":47}},"62":{"start":{"line":125,"column":8},"end":{"line":127,"column":11}},"63":{"start":{"line":126,"column":12},"end":{"line":126,"column":125}},"64":{"start":{"line":129,"column":4},"end":{"line":155,"column":7}},"65":{"start":{"line":130,"column":8},"end":{"line":142,"column":12}},"66":{"start":{"line":130,"column":25},"end":{"line":142,"column":10}},"67":{"start":{"line":131,"column":12},"end":{"line":131,"column":62}},"68":{"start":{"line":132,"column":12},"end":{"line":132,"column":86}},"69":{"start":{"line":133,"column":12},"end":{"line":133,"column":39}},"70":{"start":{"line":134,"column":31},"end":{"line":134,"column":35}},"71":{"start":{"line":135,"column":12},"end":{"line":141,"column":13}},"72":{"start":{"line":136,"column":16},"end":{"line":136,"column":64}},"73":{"start":{"line":137,"column":16},"end":{"line":137,"column":58}},"74":{"start":{"line":140,"column":16},"end":{"line":140,"column":31}},"75":{"start":{"line":143,"column":8},"end":{"line":145,"column":11}},"76":{"start":{"line":144,"column":12},"end":{"line":144,"column":46}},"77":{"start":{"line":146,"column":8},"end":{"line":148,"column":11}},"78":{"start":{"line":147,"column":12},"end":{"line":147,"column":101}},"79":{"start":{"line":149,"column":8},"end":{"line":151,"column":11}},"80":{"start":{"line":150,"column":12},"end":{"line":150,"column":47}},"81":{"start":{"line":152,"column":8},"end":{"line":154,"column":11}},"82":{"start":{"line":153,"column":12},"end":{"line":153,"column":92}},"83":{"start":{"line":156,"column":4},"end":{"line":188,"column":7}},"84":{"start":{"line":157,"column":8},"end":{"line":173,"column":12}},"85":{"start":{"line":157,"column":25},"end":{"line":173,"column":10}},"86":{"start":{"line":158,"column":12},"end":{"line":158,"column":62}},"87":{"start":{"line":159,"column":12},"end":{"line":159,"column":94}},"88":{"start":{"line":160,"column":12},"end":{"line":160,"column":39}},"89":{"start":{"line":161,"column":28},"end":{"line":165,"column":13}},"90":{"start":{"line":166,"column":12},"end":{"line":172,"column":13}},"91":{"start":{"line":167,"column":16},"end":{"line":167,"column":91}},"92":{"start":{"line":168,"column":16},"end":{"line":168,"column":63}},"93":{"start":{"line":171,"column":16},"end":{"line":171,"column":31}},"94":{"start":{"line":174,"column":8},"end":{"line":175,"column":11}},"95":{"start":{"line":176,"column":8},"end":{"line":178,"column":11}},"96":{"start":{"line":177,"column":12},"end":{"line":177,"column":55}},"97":{"start":{"line":179,"column":8},"end":{"line":181,"column":11}},"98":{"start":{"line":180,"column":12},"end":{"line":180,"column":90}},"99":{"start":{"line":182,"column":8},"end":{"line":184,"column":11}},"100":{"start":{"line":183,"column":12},"end":{"line":183,"column":47}},"101":{"start":{"line":185,"column":8},"end":{"line":187,"column":11}},"102":{"start":{"line":186,"column":12},"end":{"line":186,"column":92}},"103":{"start":{"line":189,"column":4},"end":{"line":225,"column":7}},"104":{"start":{"line":190,"column":8},"end":{"line":205,"column":12}},"105":{"start":{"line":190,"column":25},"end":{"line":205,"column":10}},"106":{"start":{"line":191,"column":12},"end":{"line":191,"column":62}},"107":{"start":{"line":192,"column":12},"end":{"line":192,"column":103}},"108":{"start":{"line":193,"column":12},"end":{"line":193,"column":104}},"109":{"start":{"line":194,"column":12},"end":{"line":194,"column":70}},"110":{"start":{"line":195,"column":12},"end":{"line":195,"column":39}},"111":{"start":{"line":196,"column":12},"end":{"line":203,"column":13}},"112":{"start":{"line":197,"column":38},"end":{"line":197,"column":89}},"113":{"start":{"line":198,"column":16},"end":{"line":198,"column":37}},"114":{"start":{"line":199,"column":16},"end":{"line":199,"column":31}},"115":{"start":{"line":202,"column":16},"end":{"line":202,"column":31}},"116":{"start":{"line":204,"column":12},"end":{"line":204,"column":60}},"117":{"start":{"line":206,"column":8},"end":{"line":209,"column":11}},"118":{"start":{"line":207,"column":12},"end":{"line":207,"column":43}},"119":{"start":{"line":208,"column":12},"end":{"line":208,"column":48}},"120":{"start":{"line":210,"column":8},"end":{"line":212,"column":11}},"121":{"start":{"line":211,"column":12},"end":{"line":211,"column":68}},"122":{"start":{"line":213,"column":8},"end":{"line":215,"column":11}},"123":{"start":{"line":214,"column":12},"end":{"line":214,"column":47}},"124":{"start":{"line":216,"column":8},"end":{"line":218,"column":11}},"125":{"start":{"line":217,"column":12},"end":{"line":217,"column":113}},"126":{"start":{"line":219,"column":8},"end":{"line":221,"column":11}},"127":{"start":{"line":220,"column":12},"end":{"line":220,"column":92}},"128":{"start":{"line":222,"column":8},"end":{"line":224,"column":11}},"129":{"start":{"line":223,"column":12},"end":{"line":223,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":58,"column":17},"end":{"line":58,"column":18}},"loc":{"start":{"line":58,"column":29},"end":{"line":226,"column":1}},"line":58},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":27},"end":{"line":59,"column":28}},"loc":{"start":{"line":59,"column":33},"end":{"line":101,"column":5}},"line":59},"9":{"name":"(anonymous_9)","decl":{"start":{"line":60,"column":19},"end":{"line":60,"column":20}},"loc":{"start":{"line":60,"column":25},"end":{"line":83,"column":10}},"line":60},"10":{"name":"(anonymous_10)","decl":{"start":{"line":60,"column":57},"end":{"line":60,"column":58}},"loc":{"start":{"line":60,"column":70},"end":{"line":83,"column":9}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":84,"column":18},"end":{"line":84,"column":19}},"loc":{"start":{"line":84,"column":24},"end":{"line":86,"column":9}},"line":84},"12":{"name":"(anonymous_12)","decl":{"start":{"line":87,"column":49},"end":{"line":87,"column":50}},"loc":{"start":{"line":87,"column":55},"end":{"line":91,"column":9}},"line":87},"13":{"name":"(anonymous_13)","decl":{"start":{"line":92,"column":40},"end":{"line":92,"column":41}},"loc":{"start":{"line":92,"column":46},"end":{"line":94,"column":9}},"line":92},"14":{"name":"(anonymous_14)","decl":{"start":{"line":95,"column":55},"end":{"line":95,"column":56}},"loc":{"start":{"line":95,"column":61},"end":{"line":97,"column":9}},"line":95},"15":{"name":"(anonymous_15)","decl":{"start":{"line":98,"column":59},"end":{"line":98,"column":60}},"loc":{"start":{"line":98,"column":65},"end":{"line":100,"column":9}},"line":98},"16":{"name":"(anonymous_16)","decl":{"start":{"line":102,"column":27},"end":{"line":102,"column":28}},"loc":{"start":{"line":102,"column":33},"end":{"line":128,"column":5}},"line":102},"17":{"name":"(anonymous_17)","decl":{"start":{"line":103,"column":19},"end":{"line":103,"column":20}},"loc":{"start":{"line":103,"column":25},"end":{"line":115,"column":10}},"line":103},"18":{"name":"(anonymous_18)","decl":{"start":{"line":103,"column":57},"end":{"line":103,"column":58}},"loc":{"start":{"line":103,"column":70},"end":{"line":115,"column":9}},"line":103},"19":{"name":"(anonymous_19)","decl":{"start":{"line":116,"column":39},"end":{"line":116,"column":40}},"loc":{"start":{"line":116,"column":45},"end":{"line":118,"column":9}},"line":116},"20":{"name":"(anonymous_20)","decl":{"start":{"line":119,"column":44},"end":{"line":119,"column":45}},"loc":{"start":{"line":119,"column":50},"end":{"line":121,"column":9}},"line":119},"21":{"name":"(anonymous_21)","decl":{"start":{"line":122,"column":39},"end":{"line":122,"column":40}},"loc":{"start":{"line":122,"column":45},"end":{"line":124,"column":9}},"line":122},"22":{"name":"(anonymous_22)","decl":{"start":{"line":125,"column":59},"end":{"line":125,"column":60}},"loc":{"start":{"line":125,"column":65},"end":{"line":127,"column":9}},"line":125},"23":{"name":"(anonymous_23)","decl":{"start":{"line":129,"column":25},"end":{"line":129,"column":26}},"loc":{"start":{"line":129,"column":31},"end":{"line":155,"column":5}},"line":129},"24":{"name":"(anonymous_24)","decl":{"start":{"line":130,"column":19},"end":{"line":130,"column":20}},"loc":{"start":{"line":130,"column":25},"end":{"line":142,"column":10}},"line":130},"25":{"name":"(anonymous_25)","decl":{"start":{"line":130,"column":57},"end":{"line":130,"column":58}},"loc":{"start":{"line":130,"column":70},"end":{"line":142,"column":9}},"line":130},"26":{"name":"(anonymous_26)","decl":{"start":{"line":143,"column":49},"end":{"line":143,"column":50}},"loc":{"start":{"line":143,"column":55},"end":{"line":145,"column":9}},"line":143},"27":{"name":"(anonymous_27)","decl":{"start":{"line":146,"column":42},"end":{"line":146,"column":43}},"loc":{"start":{"line":146,"column":48},"end":{"line":148,"column":9}},"line":146},"28":{"name":"(anonymous_28)","decl":{"start":{"line":149,"column":39},"end":{"line":149,"column":40}},"loc":{"start":{"line":149,"column":45},"end":{"line":151,"column":9}},"line":149},"29":{"name":"(anonymous_29)","decl":{"start":{"line":152,"column":59},"end":{"line":152,"column":60}},"loc":{"start":{"line":152,"column":65},"end":{"line":154,"column":9}},"line":152},"30":{"name":"(anonymous_30)","decl":{"start":{"line":156,"column":27},"end":{"line":156,"column":28}},"loc":{"start":{"line":156,"column":33},"end":{"line":188,"column":5}},"line":156},"31":{"name":"(anonymous_31)","decl":{"start":{"line":157,"column":19},"end":{"line":157,"column":20}},"loc":{"start":{"line":157,"column":25},"end":{"line":173,"column":10}},"line":157},"32":{"name":"(anonymous_32)","decl":{"start":{"line":157,"column":57},"end":{"line":157,"column":58}},"loc":{"start":{"line":157,"column":70},"end":{"line":173,"column":9}},"line":157},"33":{"name":"(anonymous_33)","decl":{"start":{"line":174,"column":18},"end":{"line":174,"column":19}},"loc":{"start":{"line":174,"column":24},"end":{"line":175,"column":9}},"line":174},"34":{"name":"(anonymous_34)","decl":{"start":{"line":176,"column":46},"end":{"line":176,"column":47}},"loc":{"start":{"line":176,"column":52},"end":{"line":178,"column":9}},"line":176},"35":{"name":"(anonymous_35)","decl":{"start":{"line":179,"column":44},"end":{"line":179,"column":45}},"loc":{"start":{"line":179,"column":50},"end":{"line":181,"column":9}},"line":179},"36":{"name":"(anonymous_36)","decl":{"start":{"line":182,"column":39},"end":{"line":182,"column":40}},"loc":{"start":{"line":182,"column":45},"end":{"line":184,"column":9}},"line":182},"37":{"name":"(anonymous_37)","decl":{"start":{"line":185,"column":59},"end":{"line":185,"column":60}},"loc":{"start":{"line":185,"column":65},"end":{"line":187,"column":9}},"line":185},"38":{"name":"(anonymous_38)","decl":{"start":{"line":189,"column":34},"end":{"line":189,"column":35}},"loc":{"start":{"line":189,"column":40},"end":{"line":225,"column":5}},"line":189},"39":{"name":"(anonymous_39)","decl":{"start":{"line":190,"column":19},"end":{"line":190,"column":20}},"loc":{"start":{"line":190,"column":25},"end":{"line":205,"column":10}},"line":190},"40":{"name":"(anonymous_40)","decl":{"start":{"line":190,"column":57},"end":{"line":190,"column":58}},"loc":{"start":{"line":190,"column":70},"end":{"line":205,"column":9}},"line":190},"41":{"name":"(anonymous_41)","decl":{"start":{"line":206,"column":48},"end":{"line":206,"column":49}},"loc":{"start":{"line":206,"column":54},"end":{"line":209,"column":9}},"line":206},"42":{"name":"(anonymous_42)","decl":{"start":{"line":210,"column":64},"end":{"line":210,"column":65}},"loc":{"start":{"line":210,"column":70},"end":{"line":212,"column":9}},"line":210},"43":{"name":"(anonymous_43)","decl":{"start":{"line":213,"column":40},"end":{"line":213,"column":41}},"loc":{"start":{"line":213,"column":46},"end":{"line":215,"column":9}},"line":213},"44":{"name":"(anonymous_44)","decl":{"start":{"line":216,"column":41},"end":{"line":216,"column":42}},"loc":{"start":{"line":216,"column":47},"end":{"line":218,"column":9}},"line":216},"45":{"name":"(anonymous_45)","decl":{"start":{"line":219,"column":46},"end":{"line":219,"column":47}},"loc":{"start":{"line":219,"column":52},"end":{"line":221,"column":9}},"line":219},"46":{"name":"(anonymous_46)","decl":{"start":{"line":222,"column":46},"end":{"line":222,"column":47}},"loc":{"start":{"line":222,"column":52},"end":{"line":224,"column":9}},"line":222}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":0,"43":1,"44":0,"45":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1,"59":0,"60":1,"61":0,"62":1,"63":0,"64":1,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":1,"78":0,"79":1,"80":0,"81":1,"82":0,"83":1,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":1,"96":0,"97":1,"98":0,"99":1,"100":0,"101":1,"102":0,"103":1,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":1,"121":0,"122":1,"123":0,"124":1,"125":0,"126":1,"127":0,"128":1,"129":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/businessLogic/todo.spec.ts","sources":["/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/businessLogic/todo.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { createTodo, deleteTodo, getTodos, updateTodo, generateUploadUrl } from '../../src/businessLogic/todo'\nimport { createLogger } from '../../src/utils/logger'\nimport { TodoAccess } from '../../src/dataLayer/todoAccess'\nimport { TodoItem } from '../../src/interface/TodoItem'\nimport { CreateTodoRequest } from '../../src/interface/CreateTodoRequest'\nimport { UpdateTodoRequest } from '../../src/interface/UpdateTodoRequest'\n\nconst todo = {\n    userId: '123456789',\n    todoId: '1234',\n    createdAt: 'New Date',\n    name: 'myTodo',\n    dueDate: 'new Date',\n    done: false,\n    attachmentUrl: ''\n}\n\nconst updatedTodo = {\n\n    name: 'myTodo',\n    dueDate: 'A new todo time',\n    done: true,\n\n}\n\nconst todos = [\n     {\n        userId: '123456789',\n        todoId: '1234',\n        createdAt: 'New Date',\n        name: 'myTodo',\n        dueDate: 'new Date',\n        done: false,\n        attachmentUrl: ''\n    },\n    {\n        userId: '123456789',\n        todoId: '1234',\n        createdAt: 'New Date',\n        name: 'myTodo',\n        dueDate: 'new Date',\n        done: false,\n        attachmentUrl: 'http:placehold.it/300'\n    },\n]\n\nconst generatUploadUrlResponse = {\n    userId: '123456789',\n    todoId: '1234',\n    createdAt: 'New Date',\n    name: 'myTodo',\n    dueDate: 'new Date',\n    done: false,\n}\nlet imageUrl: string;\ndescribe('Todo', function (this: { response: any, todos: TodoItem[], logger: any, notTodo: any, error: Error }) {\n\n    describe('CreateTodo', () => {\n        beforeEach(async () => {\n\n            this.logger = createLogger('todoAccess')\n\n            spyOn(TodoAccess.prototype, 'createTodo').and.resolveTo(todo)\n\n            spyOn(this.logger, 'info')\n\n            const request: CreateTodoRequest = {\n                name: 'myTodo',\n                dueDate: new Date().toISOString()\n            }\n\n            this.notTodo = {\n                userId: '123456789',\n                todoId: '1234',\n                createdAt: 'New Date',\n                name: 'myTodo',\n                dueDate: 'new Date',\n                done: false,\n            }\n            try {\n                this.response = await createTodo(request, todo.userId)\n                this.logger.info('Creating todo', todo)\n            } catch (e) {\n                this.error = e\n            }\n        });\n        afterEach(() => {\n            this.response = undefined\n         })\n        it(`should return a todo as a response`, () => {\n            expect(this.response).toBeDefined()\n            expect(this.response).toEqual(todo)\n            expect(this.response).not.toBe(this.notTodo)\n        })\n        it(`should not throw an error`, () => {\n            expect(this.error).toBeUndefined()\n        })\n        it(`should call 'TodoAccess.createTodo' once`, () => {\n            expect(TodoAccess.prototype.createTodo).toHaveBeenCalledTimes(1)\n        })\n        it(`should call logger once with 'Creating todo'`, () => {\n            expect(this.logger.info).toHaveBeenCalledOnceWith('Creating todo', todo)\n        })\n    })\n\n    describe('DeleteTodo', () => {\n        beforeEach(async () => {\n\n            this.logger = createLogger('todoAccess')\n\n            spyOn(TodoAccess.prototype, 'deleteTodo').and.resolveTo()\n\n            spyOn(this.logger, 'info')\n\n            const { todoId, userId } = todo\n\n\n            try {\n                await deleteTodo(todoId, userId)\n                this.logger.info('Deleting todo', { userId, todoId })\n            } catch (e) {\n                this.error = e\n            }\n        })\n        it(`should not return a todo`, () => {\n            expect(this.response).toBeUndefined()\n        })\n        it(`should call 'deleteTodo' once`, () => {\n            expect(TodoAccess.prototype.deleteTodo).toHaveBeenCalledOnceWith(todo.todoId, todo.userId)\n        })\n        it(`should not throw a error`, () => {\n            expect(this.error).toBeUndefined()\n        })\n        it(`should call logger once with 'Deleting todo'`, () => {\n            expect(this.logger.info).toHaveBeenCalledOnceWith('Deleting todo', { userId: todo.userId, todoId: todo.todoId })\n        })\n    })\n\n    describe('GetTodos', () => {\n        beforeEach(async () => {\n\n            this.logger = createLogger('todoAccess')\n\n            spyOn(TodoAccess.prototype, 'getTodos').and.resolveTo(todos)\n\n            spyOn(this.logger, 'info')\n\n            const { userId } = todo\n\n\n            try {\n                this.todos = await getTodos(todo.userId)\n                this.logger.info('Getting todos', userId)\n            } catch (e) {\n                this.error = e\n            }\n        })\n        it(`should return an array of 'todos' `, () => {\n            expect(this.todos).toEqual(todos)\n        })\n        it(`should call 'getTodos' once`, () => {\n            expect(TodoAccess.prototype.getTodos).toHaveBeenCalledOnceWith(todo.userId)\n        })\n        it(`should not throw a error`, () => {\n            expect(this.error).toBeUndefined()\n        })\n        it(`should call logger once with 'Deleting todo'`, () => {\n            expect(this.logger.info).toHaveBeenCalledOnceWith('Getting todos', todo.userId)\n        })\n    })\n\n    describe('UpdateTodo', () => {\n        beforeEach(async () => {\n\n            this.logger = createLogger('todoAccess')\n\n            spyOn(TodoAccess.prototype, 'updateTodo').and.resolveTo(updatedTodo)\n\n            spyOn(this.logger, 'info')\n\n            const request: UpdateTodoRequest = {\n                name: todo.name,\n                dueDate: 'A new todo time',\n                done: true\n            }\n\n            try {\n                this.response = await updateTodo(request, todo.userId, todo.todoId)\n                this.logger.info('Updating todo', updatedTodo)\n            } catch (e) {\n                this.error = e\n            }\n        })\n        afterEach(() => {\n\n        })\n        it(`should return an 'updatedTodo' `, () => {\n            expect(this.response).toEqual(updatedTodo)\n        })\n        it(`should call 'updateTodo' once`, () => {\n            expect(TodoAccess.prototype.updateTodo).toHaveBeenCalledTimes(1)\n        })\n        it(`should not throw a error`, () => {\n            expect(this.error).toBeUndefined()\n        })\n        it(`should call logger once with 'Updating todo'`, () => {\n            expect(this.logger.info).toHaveBeenCalledOnceWith('Updating todo', updatedTodo)\n        })\n    })\n\n    describe('GenerateUploadUrl', () => {\n        beforeEach(async() => {\n            this.logger = createLogger('TodoAccess')\n\n            spyOn(TodoAccess.prototype, 'getUploadUrl').and.resolveTo('http://localhost')\n\n            spyOn(TodoAccess.prototype, 'getTodo').and.resolveTo(generatUploadUrlResponse)\n\n            spyOn(TodoAccess.prototype, 'todoAttachUrl')\n\n            spyOn(this.logger, 'info')\n\n            try {\n                const { url, todo } = await generateUploadUrl('123456789', '1234')\n\n                this.response = todo\n                imageUrl = url\n             } catch (e) {\n                this.error = e\n            } \n\n            this.logger.info('Attaching Url to Todo', todo)\n        })\n        it(`should return 'url' and 'todo' ()`, () => {\n            expect(imageUrl).toBeDefined()\n            expect(this.response).toBeDefined()\n        })\n        it(`should return a todo that matches 'todoWithImage'`, () => {\n            expect(this.response).toEqual(generatUploadUrlResponse)\n        })\n        it(`should not throw an error`, () => {\n            expect(this.error).toBeUndefined()\n        })\n        it(`should call 'getTodo' once`, () => {\n            expect(TodoAccess.prototype.getTodo).toHaveBeenCalledOnceWith(todo.userId, todo.todoId)\n        })\n        it(`should call 'getUploadUrl' once`, () => {\n            expect(TodoAccess.prototype.getUploadUrl).toHaveBeenCalledTimes(1)\n        })\n        it(`should call 'logger info' twice`, () => {\n            expect(this.logger.info).toHaveBeenCalledTimes(1)\n        })\n     })\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"527c42a1301953ceb9e5de5ecb9ecfdd44c26c71"},"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/businessLogic/todo.ts":{"path":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/businessLogic/todo.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":117}},"14":{"start":{"line":13,"column":13},"end":{"line":13,"column":28}},"15":{"start":{"line":14,"column":21},"end":{"line":14,"column":55}},"16":{"start":{"line":15,"column":19},"end":{"line":15,"column":48}},"17":{"start":{"line":20,"column":4},"end":{"line":24,"column":7}},"18":{"start":{"line":21,"column":26},"end":{"line":21,"column":50}},"19":{"start":{"line":22,"column":23},"end":{"line":22,"column":43}},"20":{"start":{"line":23,"column":8},"end":{"line":23,"column":157}},"21":{"start":{"line":26,"column":0},"end":{"line":26,"column":32}},"22":{"start":{"line":31,"column":4},"end":{"line":40,"column":7}},"23":{"start":{"line":32,"column":8},"end":{"line":39,"column":11}},"24":{"start":{"line":42,"column":0},"end":{"line":42,"column":32}},"25":{"start":{"line":47,"column":4},"end":{"line":49,"column":7}},"26":{"start":{"line":48,"column":8},"end":{"line":48,"column":52}},"27":{"start":{"line":51,"column":0},"end":{"line":51,"column":32}},"28":{"start":{"line":56,"column":4},"end":{"line":58,"column":7}},"29":{"start":{"line":57,"column":8},"end":{"line":57,"column":49}},"30":{"start":{"line":60,"column":0},"end":{"line":60,"column":28}},"31":{"start":{"line":65,"column":4},"end":{"line":78,"column":7}},"32":{"start":{"line":66,"column":24},"end":{"line":66,"column":44}},"33":{"start":{"line":67,"column":20},"end":{"line":67,"column":58}},"34":{"start":{"line":68,"column":21},"end":{"line":68,"column":61}},"35":{"start":{"line":69,"column":8},"end":{"line":76,"column":11}},"36":{"start":{"line":77,"column":8},"end":{"line":77,"column":29}},"37":{"start":{"line":80,"column":0},"end":{"line":80,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"createTodo","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":19}},"loc":{"start":{"line":19,"column":37},"end":{"line":25,"column":1}},"line":19},"8":{"name":"(anonymous_8)","decl":{"start":{"line":20,"column":43},"end":{"line":20,"column":44}},"loc":{"start":{"line":20,"column":56},"end":{"line":24,"column":5}},"line":20},"9":{"name":"updateTodo","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":19}},"loc":{"start":{"line":30,"column":42},"end":{"line":41,"column":1}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":43},"end":{"line":31,"column":44}},"loc":{"start":{"line":31,"column":56},"end":{"line":40,"column":5}},"line":31},"11":{"name":"deleteTodo","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":19}},"loc":{"start":{"line":46,"column":36},"end":{"line":50,"column":1}},"line":46},"12":{"name":"(anonymous_12)","decl":{"start":{"line":47,"column":43},"end":{"line":47,"column":44}},"loc":{"start":{"line":47,"column":56},"end":{"line":49,"column":5}},"line":47},"13":{"name":"getTodos","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":17}},"loc":{"start":{"line":55,"column":26},"end":{"line":59,"column":1}},"line":55},"14":{"name":"(anonymous_14)","decl":{"start":{"line":56,"column":43},"end":{"line":56,"column":44}},"loc":{"start":{"line":56,"column":56},"end":{"line":58,"column":5}},"line":56},"15":{"name":"generateUploadUrl","decl":{"start":{"line":64,"column":9},"end":{"line":64,"column":26}},"loc":{"start":{"line":64,"column":43},"end":{"line":79,"column":1}},"line":64},"16":{"name":"(anonymous_16)","decl":{"start":{"line":65,"column":43},"end":{"line":65,"column":44}},"loc":{"start":{"line":65,"column":56},"end":{"line":78,"column":5}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/businessLogic/todo.ts","sources":["/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/businessLogic/todo.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA4B;AAK5B,wDAAoD;AAEpD,MAAM,UAAU,GAAG,IAAI,uBAAU,EAAE,CAAA;AAEnC;;GAEG;AACH,SAAsB,UAAU,CAAC,OAA0B,EAAE,MAAc;;QACvE,MAAM,SAAS,GAAW,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAA;QAClD,MAAM,MAAM,GAAW,IAAI,CAAC,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAA;QAC3C,OAAO,MAAM,UAAU,CAAC,UAAU,iBAC9B,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,SAAS,EACpB,IAAI,EAAE,KAAK,EACX,aAAa,EAAE,EAAE,IACd,OAAO,EACZ,CAAA;IACN,CAAC;CAAA;AAXD,gCAWC;AAKD;;GAEG;AACH,SAAsB,UAAU,CAAC,IAAuB,EAAE,MAAc,EAAE,MAAc;;QACpF,OAAO,MAAM,UAAU,CAAC,UAAU,CAAC;YAC/B,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACtC,CAAC,CAAA;IACN,CAAC;CAAA;AATD,gCASC;AAKD;;GAEG;AACH,SAAsB,UAAU,CAAC,MAAc,EAAE,MAAc;;QAC1D,MAAM,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAChD,CAAC;CAAA;AAFD,gCAEC;AAKD;;GAEG;AACH,SAAsB,QAAQ,CAAC,MAAc;;QACzC,OAAO,MAAM,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;IAC5C,CAAC;CAAA;AAFD,4BAEC;AAKD;;GAEG;AACH,SAAsB,iBAAiB,CAAC,MAAc,EAAE,MAAc;;QAClE,MAAM,OAAO,GAAW,IAAI,CAAC,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAA;QAC5C,MAAM,GAAG,GAAW,MAAM,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;QAC1D,MAAM,IAAI,GAAa,MAAM,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC/D,MAAM,UAAU,CAAC,aAAa,CAAC,OAAO,EAAE;YACpC,MAAM;YACN,MAAM;YACN,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,IAAI,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC,CAAA;QACF,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAA;IACxB,CAAC;CAAA;AAbD,8CAaC","sourcesContent":["import * as uuid from 'uuid'\nimport { CreateTodoRequest } from '../interface/CreateTodoRequest'\nimport { UpdateTodoRequest } from '../interface/UpdateTodoRequest'\nimport { TodoItem } from '../interface/TodoItem'\nimport { TodoUpdate } from '../interface/TodoUpdate'\nimport { TodoAccess } from '../dataLayer/todoAccess'\n\nconst todoAccess = new TodoAccess()\n\n/**\n * create a new todo requires userId and CreateTodoRequst\n */\nexport async function createTodo(newTodo: CreateTodoRequest, userId: string): Promise<TodoItem> {\n    const timestamp: string = new Date().toISOString()\n    const todoId: string = uuid.v4().toString()\n    return await todoAccess.createTodo({\n        todoId: todoId,\n        userId: userId,\n        createdAt: timestamp,\n        done: false,\n        attachmentUrl: '',\n        ...newTodo\n    })\n}\n\n\n\n\n/**\n * update a todo requires todoId, userId, UpdateTodoRequest\n */\nexport async function updateTodo(todo: UpdateTodoRequest, userId: string, todoId: string): Promise<TodoUpdate> {\n    return await todoAccess.updateTodo({\n        todoId: todoId,\n        userId: userId,\n        name: todo.name,\n        dueDate: todo.dueDate,\n        done: todo.done,\n        createdAt: new Date().toISOString()\n    })\n}\n\n\n    \n\n/**\n * delete a todo requires userId and todoId\n */\nexport async function deleteTodo(userId: string, todoId: string): Promise<void> {\n     await todoAccess.deleteTodo(userId, todoId)\n}\n\n\n\n\n/**\n * get all user todos by userId\n */\nexport async function getTodos(userId: string): Promise<TodoItem[]> {\n    return await todoAccess.getTodos(userId)\n}\n\n\n\n\n/**\n * creates an url for a todo requires userId and stringId\n */\nexport async function generateUploadUrl(userId: string, todoId: string): Promise<{url: string, todo: TodoItem}> {\n    const imageId: string = uuid.v4().toString()\n    const url: string = await todoAccess.getUploadUrl(imageId)\n    const todo: TodoItem = await todoAccess.getTodo(userId, todoId)\n    await todoAccess.todoAttachUrl(imageId, {\n        userId,\n        todoId,\n        name: todo.name,\n        dueDate: todo.dueDate,\n        createdAt: todo.createdAt,\n        done: todo.done,\n    })\n    return { url, todo }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3bd20f48e659c294acd930c88ceaf60cad66380d"},"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/dataLayer/todoAccess.ts":{"path":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/dataLayer/todoAccess.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"14":{"start":{"line":13,"column":12},"end":{"line":13,"column":30}},"15":{"start":{"line":14,"column":17},"end":{"line":14,"column":43}},"16":{"start":{"line":15,"column":16},"end":{"line":15,"column":39}},"17":{"start":{"line":16,"column":13},"end":{"line":16,"column":36}},"18":{"start":{"line":17,"column":15},"end":{"line":17,"column":50}},"19":{"start":{"line":23,"column":8},"end":{"line":23,"column":35}},"20":{"start":{"line":24,"column":8},"end":{"line":24,"column":37}},"21":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}},"22":{"start":{"line":26,"column":8},"end":{"line":26,"column":37}},"23":{"start":{"line":27,"column":8},"end":{"line":27,"column":43}},"24":{"start":{"line":33,"column":8},"end":{"line":37,"column":11}},"25":{"start":{"line":34,"column":12},"end":{"line":34,"column":47}},"26":{"start":{"line":35,"column":12},"end":{"line":35,"column":92}},"27":{"start":{"line":36,"column":12},"end":{"line":36,"column":24}},"28":{"start":{"line":43,"column":8},"end":{"line":63,"column":11}},"29":{"start":{"line":44,"column":12},"end":{"line":44,"column":47}},"30":{"start":{"line":45,"column":27},"end":{"line":56,"column":24}},"31":{"start":{"line":57,"column":31},"end":{"line":61,"column":13}},"32":{"start":{"line":62,"column":12},"end":{"line":62,"column":30}},"33":{"start":{"line":69,"column":8},"end":{"line":72,"column":11}},"34":{"start":{"line":70,"column":12},"end":{"line":70,"column":61}},"35":{"start":{"line":71,"column":12},"end":{"line":71,"column":107}},"36":{"start":{"line":78,"column":8},"end":{"line":88,"column":11}},"37":{"start":{"line":79,"column":12},"end":{"line":79,"column":49}},"38":{"start":{"line":80,"column":27},"end":{"line":86,"column":24}},"39":{"start":{"line":87,"column":12},"end":{"line":87,"column":32}},"40":{"start":{"line":94,"column":8},"end":{"line":104,"column":11}},"41":{"start":{"line":95,"column":12},"end":{"line":95,"column":60}},"42":{"start":{"line":96,"column":25},"end":{"line":102,"column":24}},"43":{"start":{"line":103,"column":12},"end":{"line":103,"column":29}},"44":{"start":{"line":110,"column":8},"end":{"line":115,"column":11}},"45":{"start":{"line":111,"column":12},"end":{"line":111,"column":55}},"46":{"start":{"line":112,"column":28},"end":{"line":112,"column":143}},"47":{"start":{"line":113,"column":12},"end":{"line":113,"column":54}},"48":{"start":{"line":114,"column":12},"end":{"line":114,"column":94}},"49":{"start":{"line":121,"column":8},"end":{"line":128,"column":11}},"50":{"start":{"line":122,"column":12},"end":{"line":122,"column":55}},"51":{"start":{"line":123,"column":12},"end":{"line":127,"column":15}},"52":{"start":{"line":131,"column":0},"end":{"line":131,"column":32}},"53":{"start":{"line":136,"column":4},"end":{"line":142,"column":5}},"54":{"start":{"line":137,"column":8},"end":{"line":137,"column":58}},"55":{"start":{"line":138,"column":8},"end":{"line":141,"column":11}},"56":{"start":{"line":143,"column":4},"end":{"line":143,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":227},"end":{"line":28,"column":5}},"line":22},"8":{"name":"(anonymous_8)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":21},"end":{"line":38,"column":5}},"line":32},"9":{"name":"(anonymous_9)","decl":{"start":{"line":33,"column":47},"end":{"line":33,"column":48}},"loc":{"start":{"line":33,"column":60},"end":{"line":37,"column":9}},"line":33},"10":{"name":"(anonymous_10)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":21},"end":{"line":64,"column":5}},"line":42},"11":{"name":"(anonymous_11)","decl":{"start":{"line":43,"column":47},"end":{"line":43,"column":48}},"loc":{"start":{"line":43,"column":60},"end":{"line":63,"column":9}},"line":43},"12":{"name":"(anonymous_12)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":31},"end":{"line":73,"column":5}},"line":68},"13":{"name":"(anonymous_13)","decl":{"start":{"line":69,"column":47},"end":{"line":69,"column":48}},"loc":{"start":{"line":69,"column":60},"end":{"line":72,"column":9}},"line":69},"14":{"name":"(anonymous_14)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":21},"end":{"line":89,"column":5}},"line":77},"15":{"name":"(anonymous_15)","decl":{"start":{"line":78,"column":47},"end":{"line":78,"column":48}},"loc":{"start":{"line":78,"column":60},"end":{"line":88,"column":9}},"line":78},"16":{"name":"(anonymous_16)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":28},"end":{"line":105,"column":5}},"line":93},"17":{"name":"(anonymous_17)","decl":{"start":{"line":94,"column":47},"end":{"line":94,"column":48}},"loc":{"start":{"line":94,"column":60},"end":{"line":104,"column":9}},"line":94},"18":{"name":"(anonymous_18)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":33},"end":{"line":116,"column":5}},"line":109},"19":{"name":"(anonymous_19)","decl":{"start":{"line":110,"column":47},"end":{"line":110,"column":48}},"loc":{"start":{"line":110,"column":60},"end":{"line":115,"column":9}},"line":110},"20":{"name":"(anonymous_20)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":26},"end":{"line":129,"column":5}},"line":120},"21":{"name":"(anonymous_21)","decl":{"start":{"line":121,"column":47},"end":{"line":121,"column":48}},"loc":{"start":{"line":121,"column":60},"end":{"line":128,"column":9}},"line":121},"22":{"name":"createDynamoDBClient","decl":{"start":{"line":135,"column":9},"end":{"line":135,"column":29}},"loc":{"start":{"line":135,"column":32},"end":{"line":144,"column":1}},"line":135}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":22,"column":16},"end":{"line":22,"column":50}},"type":"default-arg","locations":[{"start":{"line":22,"column":28},"end":{"line":22,"column":50}}],"line":22},"6":{"loc":{"start":{"line":22,"column":52},"end":{"line":22,"column":87}},"type":"default-arg","locations":[{"start":{"line":22,"column":65},"end":{"line":22,"column":87}}],"line":22},"7":{"loc":{"start":{"line":22,"column":89},"end":{"line":22,"column":133}},"type":"default-arg","locations":[{"start":{"line":22,"column":94},"end":{"line":22,"column":133}}],"line":22},"8":{"loc":{"start":{"line":22,"column":135},"end":{"line":22,"column":174}},"type":"default-arg","locations":[{"start":{"line":22,"column":148},"end":{"line":22,"column":174}}],"line":22},"9":{"loc":{"start":{"line":22,"column":176},"end":{"line":22,"column":225}},"type":"default-arg","locations":[{"start":{"line":22,"column":192},"end":{"line":22,"column":225}}],"line":22},"10":{"loc":{"start":{"line":136,"column":4},"end":{"line":142,"column":5}},"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":142,"column":5}},{"start":{"line":136,"column":4},"end":{"line":142,"column":5}}],"line":136}},"s":{"0":1,"1":1,"2":0,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":2,"20":2,"21":2,"22":2,"23":2,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":2,"54":0,"55":0,"56":2},"f":{"0":1,"1":1,"2":0,"3":1,"4":1,"5":0,"6":2,"7":2,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":2},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[2],"6":[2],"7":[2],"8":[2],"9":[2],"10":[0,2]},"inputSourceMap":{"version":3,"file":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/dataLayer/todoAccess.ts","sources":["/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/dataLayer/todoAccess.ts"],"names":[],"mappings":"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","sourcesContent":["import * as AWS from 'aws-sdk'\nimport { createLogger } from '../utils/logger'\nimport { TodoItem } from '../interface/TodoItem'\nimport { TodoUpdate } from '../interface/TodoUpdate'\nconst AWSXRay = require('aws-xray-sdk');\n\nconst XAWS = AWSXRay.captureAWS(AWS)\nconst logger = createLogger('todoAccess')\n\n/**\n * Data object for managing todos\n */\nexport class TodoAccess {\n\n    constructor(\n        private readonly docClient =  createDynamoDBClient(),\n        private readonly todosTable = process.env.TODO_TABLE,\n        private readonly s3 = new XAWS.S3({ signatureVersion: 'v4' }),\n        private readonly bucketName = process.env.TODO_S3_BUCKET,\n        private readonly urlExpiration = process.env.SIGNED_URL_EXPIRATION\n    ) { }\n\n\n\n\n    /**\n     * creates a new todo in the database\n     */\n    async createTodo(todo: TodoItem): Promise<TodoItem> {\n        logger.info('Creating todo', todo)\n        await this.docClient.put({ TableName: this.todosTable, Item: todo, }).promise();\n        return todo as TodoItem\n    }\n\n\n\n\n\n    /**\n     * updates a todo by composite key and returns data for TodoUpdate\n     */\n    async updateTodo(todo: TodoItem): Promise<TodoUpdate> {\n        logger.info('Updating todo', todo)\n        const result = await this.docClient.update({\n            TableName: this.todosTable,\n            Key: { userId: todo.userId, todoId: todo.todoId },\n            UpdateExpression: \"set #name=:name, dueDate=:dueDate, done=:done\",\n            ExpressionAttributeValues: {\n                \":name\": todo.name,\n                \":dueDate\": todo.dueDate,\n                \":done\": todo.done,\n            },\n            ExpressionAttributeNames: { \"#name\": \"name\" },\n            ReturnValues: \"UPDATED_NEW\"\n        }).promise()\n\n        const todoUpdate = {\n            name: result.name,\n            dueDate: result.dueDate,\n            done: result.done\n        }\n\n        return todoUpdate as TodoUpdate\n    }\n\n\n\n\n    /**\n     * deletes a todo from the database by composite key\n     */\n    async deleteTodo(userId: string, todoId: string): Promise<void> {\n        logger.info('Deleting todo', { userId, todoId })\n        await this.docClient.delete({ TableName: this.todosTable, Key: { userId, todoId } }).promise()\n    }\n\n\n\n\n\n    /**\n     * gets all user todos by userId\n     */\n    async getTodos(userId: string): Promise<TodoItem[]> {\n        logger.info('Getting todos', userId)\n        const result = await this.docClient.query({\n            TableName: this.todosTable,\n            KeyConditionExpression: 'userId = :userId',\n            ProjectionExpression: '#name, todoId, done, dueDate, createdAt, attachmentUrl',\n            ExpressionAttributeNames: { \"#name\": \"name\" },\n            ExpressionAttributeValues: { ':userId': userId }\n        }).promise()\n        return result.Items as TodoItem[]\n    }\n\n\n\n\n\n    /**\n     * get a todo from the database by composite key\n     */\n    async getTodo(userId: string, todoId: string): Promise<TodoItem> {\n        logger.info('Getting todo', { userId, todoId })\n        const todo = await this.docClient\n            .get({\n                TableName: this.todosTable,\n                Key: { userId, todoId },\n                ProjectionExpression: \"#name, createdAt, done, dueDate\",\n                ExpressionAttributeNames: { \"#name\": \"name\" }\n            }).promise()\n        return todo.Item as TodoItem\n    }\n\n\n\n\n\n    /**\n     * replaces an old todo with a todo with attachmentUrl\n     */\n    async todoAttachUrl(imageId: string, todo: TodoItem,): Promise<void> {\n        logger.info('Attaching Url to Todo', todo)\n        const newItem: TodoItem = {\n            ...todo,\n            attachmentUrl: `https://${this.bucketName}.s3.amazonaws.com/${imageId}`\n        }\n        logger.info('Todo AttachingUrl', newItem)\n        await this.docClient.put({ TableName: this.todosTable, Item: newItem }).promise()\n    }\n\n\n\n\n\n    /**\n     * generates presigned url and returns the url\n     */\n    async getUploadUrl(imageId: string): Promise<string> {\n        logger.info('Getting upload url', imageId)\n        return this.s3.getSignedUrl('putObject', {\n            Bucket: this.bucketName,\n            Key: imageId,\n            Expires: parseInt(this.urlExpiration, 10)\n        })\n    }\n}\n\n/**\n *  checks to see if the env IS_OFFLINE is set and will use local DB\n */\nfunction createDynamoDBClient() {\n    if (process.env.IS_OFFLINE) {\n        console.log('Creating a local DynamoDB instance')\n        return new XAWS.DynamoDB.DocumentClient({\n            region: 'localhost',\n            endpoint: 'http://localhost:8000'\n        })\n    }\n\n    return new XAWS.DynamoDB.DocumentClient()\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9e3ba2ce3c5f7423d7dfeae3a181738b31950633"},"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/utils/logger.ts":{"path":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/utils/logger.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":11,"column":4},"end":{"line":18,"column":7}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"fnMap":{"0":{"name":"createLogger","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":21}},"loc":{"start":{"line":10,"column":34},"end":{"line":19,"column":1}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/utils/logger.ts","sources":["/Users/mattheweddy/Desktop/projects/serverless-todo/backend/src/utils/logger.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAElC;;;;GAIG;AACH,SAAgB,YAAY,CAAC,UAAkB;IAC7C,OAAO,OAAO,CAAC,YAAY,CAAC;QAC1B,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;QAC7B,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;QACjC,UAAU,EAAE;YACV,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;SACjC;KACF,CAAC,CAAA;AACJ,CAAC;AATD,oCASC","sourcesContent":["import * as winston from 'winston'\n\n/**\n * Create a logger instance to write log messages in JSON format.\n *\n * @param loggerName - a name of a logger that will be added to all messages\n */\nexport function createLogger(loggerName: string) {\n  return winston.createLogger({\n    level: 'info',\n    format: winston.format.json(),\n    defaultMeta: { name: loggerName },\n    transports: [\n      new winston.transports.Console()\n    ]\n  })\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"589bd44af20732b58511d373ef45801d7953390b"},"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/dataLayer/todoAccess.spec.ts":{"path":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/dataLayer/todoAccess.spec.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":16},"end":{"line":12,"column":39}},"14":{"start":{"line":13,"column":12},"end":{"line":13,"column":30}},"15":{"start":{"line":14,"column":21},"end":{"line":14,"column":62}},"16":{"start":{"line":15,"column":13},"end":{"line":23,"column":1}},"17":{"start":{"line":24,"column":14},"end":{"line":43,"column":1}},"18":{"start":{"line":44,"column":19},"end":{"line":48,"column":1}},"19":{"start":{"line":49,"column":0},"end":{"line":117,"column":3}},"20":{"start":{"line":50,"column":4},"end":{"line":66,"column":7}},"21":{"start":{"line":51,"column":8},"end":{"line":58,"column":12}},"22":{"start":{"line":51,"column":25},"end":{"line":58,"column":10}},"23":{"start":{"line":52,"column":12},"end":{"line":52,"column":40}},"24":{"start":{"line":53,"column":12},"end":{"line":55,"column":15}},"25":{"start":{"line":54,"column":16},"end":{"line":54,"column":37}},"26":{"start":{"line":56,"column":31},"end":{"line":56,"column":60}},"27":{"start":{"line":57,"column":12},"end":{"line":57,"column":62}},"28":{"start":{"line":59,"column":8},"end":{"line":61,"column":11}},"29":{"start":{"line":60,"column":12},"end":{"line":60,"column":62}},"30":{"start":{"line":62,"column":8},"end":{"line":65,"column":11}},"31":{"start":{"line":63,"column":12},"end":{"line":63,"column":48}},"32":{"start":{"line":64,"column":12},"end":{"line":64,"column":48}},"33":{"start":{"line":67,"column":4},"end":{"line":83,"column":7}},"34":{"start":{"line":68,"column":8},"end":{"line":75,"column":12}},"35":{"start":{"line":68,"column":25},"end":{"line":75,"column":10}},"36":{"start":{"line":69,"column":12},"end":{"line":69,"column":40}},"37":{"start":{"line":70,"column":12},"end":{"line":72,"column":15}},"38":{"start":{"line":71,"column":16},"end":{"line":71,"column":43}},"39":{"start":{"line":73,"column":31},"end":{"line":73,"column":60}},"40":{"start":{"line":74,"column":12},"end":{"line":74,"column":62}},"41":{"start":{"line":76,"column":8},"end":{"line":78,"column":11}},"42":{"start":{"line":77,"column":12},"end":{"line":77,"column":65}},"43":{"start":{"line":79,"column":8},"end":{"line":82,"column":11}},"44":{"start":{"line":80,"column":12},"end":{"line":80,"column":48}},"45":{"start":{"line":81,"column":12},"end":{"line":81,"column":54}},"46":{"start":{"line":84,"column":4},"end":{"line":99,"column":7}},"47":{"start":{"line":85,"column":8},"end":{"line":92,"column":12}},"48":{"start":{"line":85,"column":25},"end":{"line":92,"column":10}},"49":{"start":{"line":86,"column":12},"end":{"line":86,"column":40}},"50":{"start":{"line":87,"column":12},"end":{"line":89,"column":15}},"51":{"start":{"line":88,"column":16},"end":{"line":88,"column":35}},"52":{"start":{"line":90,"column":31},"end":{"line":90,"column":60}},"53":{"start":{"line":91,"column":12},"end":{"line":91,"column":82}},"54":{"start":{"line":93,"column":8},"end":{"line":95,"column":11}},"55":{"start":{"line":94,"column":12},"end":{"line":94,"column":65}},"56":{"start":{"line":96,"column":8},"end":{"line":98,"column":11}},"57":{"start":{"line":97,"column":12},"end":{"line":97,"column":50}},"58":{"start":{"line":100,"column":4},"end":{"line":116,"column":7}},"59":{"start":{"line":101,"column":8},"end":{"line":108,"column":12}},"60":{"start":{"line":101,"column":25},"end":{"line":108,"column":10}},"61":{"start":{"line":102,"column":12},"end":{"line":102,"column":40}},"62":{"start":{"line":103,"column":12},"end":{"line":105,"column":15}},"63":{"start":{"line":104,"column":16},"end":{"line":104,"column":38}},"64":{"start":{"line":106,"column":31},"end":{"line":106,"column":60}},"65":{"start":{"line":107,"column":12},"end":{"line":107,"column":67}},"66":{"start":{"line":112,"column":8},"end":{"line":115,"column":11}},"67":{"start":{"line":113,"column":12},"end":{"line":113,"column":48}},"68":{"start":{"line":114,"column":12},"end":{"line":114,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":49,"column":23},"end":{"line":49,"column":24}},"loc":{"start":{"line":49,"column":35},"end":{"line":117,"column":1}},"line":49},"8":{"name":"(anonymous_8)","decl":{"start":{"line":50,"column":27},"end":{"line":50,"column":28}},"loc":{"start":{"line":50,"column":33},"end":{"line":66,"column":5}},"line":50},"9":{"name":"(anonymous_9)","decl":{"start":{"line":51,"column":19},"end":{"line":51,"column":20}},"loc":{"start":{"line":51,"column":25},"end":{"line":58,"column":10}},"line":51},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":57},"end":{"line":51,"column":58}},"loc":{"start":{"line":51,"column":70},"end":{"line":58,"column":9}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":53,"column":59},"end":{"line":53,"column":60}},"loc":{"start":{"line":53,"column":82},"end":{"line":55,"column":13}},"line":53},"12":{"name":"(anonymous_12)","decl":{"start":{"line":59,"column":18},"end":{"line":59,"column":19}},"loc":{"start":{"line":59,"column":24},"end":{"line":61,"column":9}},"line":59},"13":{"name":"(anonymous_13)","decl":{"start":{"line":62,"column":51},"end":{"line":62,"column":52}},"loc":{"start":{"line":62,"column":57},"end":{"line":65,"column":9}},"line":62},"14":{"name":"(anonymous_14)","decl":{"start":{"line":67,"column":27},"end":{"line":67,"column":28}},"loc":{"start":{"line":67,"column":33},"end":{"line":83,"column":5}},"line":67},"15":{"name":"(anonymous_15)","decl":{"start":{"line":68,"column":19},"end":{"line":68,"column":20}},"loc":{"start":{"line":68,"column":25},"end":{"line":75,"column":10}},"line":68},"16":{"name":"(anonymous_16)","decl":{"start":{"line":68,"column":57},"end":{"line":68,"column":58}},"loc":{"start":{"line":68,"column":70},"end":{"line":75,"column":9}},"line":68},"17":{"name":"(anonymous_17)","decl":{"start":{"line":70,"column":62},"end":{"line":70,"column":63}},"loc":{"start":{"line":70,"column":85},"end":{"line":72,"column":13}},"line":70},"18":{"name":"(anonymous_18)","decl":{"start":{"line":76,"column":18},"end":{"line":76,"column":19}},"loc":{"start":{"line":76,"column":24},"end":{"line":78,"column":9}},"line":76},"19":{"name":"(anonymous_19)","decl":{"start":{"line":79,"column":57},"end":{"line":79,"column":58}},"loc":{"start":{"line":79,"column":63},"end":{"line":82,"column":9}},"line":79},"20":{"name":"(anonymous_20)","decl":{"start":{"line":84,"column":27},"end":{"line":84,"column":28}},"loc":{"start":{"line":84,"column":33},"end":{"line":99,"column":5}},"line":84},"21":{"name":"(anonymous_21)","decl":{"start":{"line":85,"column":19},"end":{"line":85,"column":20}},"loc":{"start":{"line":85,"column":25},"end":{"line":92,"column":10}},"line":85},"22":{"name":"(anonymous_22)","decl":{"start":{"line":85,"column":57},"end":{"line":85,"column":58}},"loc":{"start":{"line":85,"column":70},"end":{"line":92,"column":9}},"line":85},"23":{"name":"(anonymous_23)","decl":{"start":{"line":87,"column":62},"end":{"line":87,"column":63}},"loc":{"start":{"line":87,"column":85},"end":{"line":89,"column":13}},"line":87},"24":{"name":"(anonymous_24)","decl":{"start":{"line":93,"column":18},"end":{"line":93,"column":19}},"loc":{"start":{"line":93,"column":24},"end":{"line":95,"column":9}},"line":93},"25":{"name":"(anonymous_25)","decl":{"start":{"line":96,"column":35},"end":{"line":96,"column":36}},"loc":{"start":{"line":96,"column":41},"end":{"line":98,"column":9}},"line":96},"26":{"name":"(anonymous_26)","decl":{"start":{"line":100,"column":26},"end":{"line":100,"column":27}},"loc":{"start":{"line":100,"column":32},"end":{"line":116,"column":5}},"line":100},"27":{"name":"(anonymous_27)","decl":{"start":{"line":101,"column":19},"end":{"line":101,"column":20}},"loc":{"start":{"line":101,"column":25},"end":{"line":108,"column":10}},"line":101},"28":{"name":"(anonymous_28)","decl":{"start":{"line":101,"column":57},"end":{"line":101,"column":58}},"loc":{"start":{"line":101,"column":70},"end":{"line":108,"column":9}},"line":101},"29":{"name":"(anonymous_29)","decl":{"start":{"line":103,"column":61},"end":{"line":103,"column":62}},"loc":{"start":{"line":103,"column":84},"end":{"line":105,"column":13}},"line":103},"30":{"name":"(anonymous_30)","decl":{"start":{"line":112,"column":48},"end":{"line":112,"column":49}},"loc":{"start":{"line":112,"column":54},"end":{"line":115,"column":9}},"line":112}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":1,"2":0,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1,"44":0,"45":0,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1,"57":0,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":1,"5":0,"6":2,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":1,"29":1,"30":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/dataLayer/todoAccess.spec.ts","sources":["/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/dataLayer/todoAccess.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import * as AWSMock from 'aws-sdk-mock'\nimport * as AWS from 'aws-sdk'\nimport { TodoAccess } from '../../src/dataLayer/todoAccess'\n\nconst todo = {\n    userId: '123456789',\n    todoId: '1234',\n    createdAt: 'New Date',\n    name: 'myTodo',\n    dueDate: 'new Date',\n    done: false,\n    attachmentUrl: ''\n}\n\n\nconst todos = [\n    {\n        userId: '123456789',\n        todoId: '1234',\n        createdAt: 'New Date',\n        name: 'myTodo',\n        dueDate: 'new Date',\n        done: false,\n        attachmentUrl: ''\n    },\n    {\n        userId: '123456789',\n        todoId: '1234',\n        createdAt: '8/25/2021',\n        name: 'myTodo Again',\n        dueDate: '8/25/2021',\n        done: true,\n        attachmentUrl: 'http://example.com/'\n    }\n]\n\nconst todoUpdate = {\n    name: 'myTodo',\n    dueDate: 'new Date',\n    done: false,\n}\n\ndescribe('TodoAccess', function (this: {response: any, logger: any}) {\n\n    describe('CreateTodo', () => {\n        beforeEach(async () => {\n\n            AWSMock.setSDKInstance(AWS);\n            AWSMock.mock('DynamoDB.DocumentClient', 'put', function (_, callback){\n                callback(null, todo);\n            });\n\n            const todoAccess = new TodoAccess()\n\n            this.response = await todoAccess.createTodo(todo)\n        })\n        afterEach(() => {\n            AWSMock.restore('DynamoDB.DocumentClient', 'put')\n        })\n        it(`should return a 'todo' as a response`, () => {\n            expect(this.response).toBeDefined()\n            expect(this.response).toEqual(todo)\n        })\n    })\n    \n    describe('UpdateTodo', () => {\n        beforeEach(async () => {\n\n            AWSMock.setSDKInstance(AWS);\n            AWSMock.mock('DynamoDB.DocumentClient', 'update', function (_, callback){\n                callback(null, todoUpdate);\n            });\n\n            const todoAccess = new TodoAccess()\n\n            this.response = await todoAccess.updateTodo(todo)\n        })\n        afterEach(() => {\n            AWSMock.restore('DynamoDB.DocumentClient', 'update')\n        })\n        it(`should return a 'todoUpdate' as a response`, () => {\n            expect(this.response).toBeDefined()\n            expect(this.response).toEqual(todoUpdate)\n        })\n    })\n    \n    describe('DeleteTodo', () => {\n        beforeEach(async () => {\n\n            AWSMock.setSDKInstance(AWS);\n            AWSMock.mock('DynamoDB.DocumentClient', 'delete', function (_, callback){\n                callback(null, {});\n            });\n\n            const todoAccess = new TodoAccess()\n\n            this.response = await todoAccess.deleteTodo(todo.userId, todo.todoId)\n        })\n        afterEach(() => {\n            AWSMock.restore('DynamoDB.DocumentClient', 'delete')\n        })\n        it(`should delete a todo`, () => {\n            expect(this.response).toBeUndefined()\n        })\n    })\n    fdescribe('GetTodos', () => {\n        beforeEach(async () => {\n\n            AWSMock.setSDKInstance(AWS);\n            AWSMock.mock('DynamoDB.DocumentClient', 'query', function (_, callback) {\n                callback(null, todos);\n            });\n\n            const todoAccess = new TodoAccess()\n\n            this.response = await todoAccess.getTodos(todo.userId)\n        })\n        // afterEach(() => {\n        //     AWSMock.restore('DynamoDB.DocumentClient', 'query')\n        // })\n        it(`should return an array of 'todos'`, () => {\n            expect(this.response).toBeDefined()\n            expect(this.response).toEqual(todos)\n        })\n     })\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"99d7b63c8327edc733b66435c4fbe658433cb1b8"},"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/lambda/utils.spec.ts":{"path":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/lambda/utils.spec.ts","statementMap":{},"fnMap":{},"branchMap":{},"s":{},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/lambda/utils.spec.ts","sources":["/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/lambda/utils.spec.ts"],"names":[],"mappings":"","sourcesContent":[""]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"95a11a32c69a29a455453f289d63b5ccf0dc819c"},"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/utils/logger.spec.ts":{"path":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/utils/logger.spec.ts","statementMap":{},"fnMap":{},"branchMap":{},"s":{},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/utils/logger.spec.ts","sources":["/Users/mattheweddy/Desktop/projects/serverless-todo/backend/spec/utils/logger.spec.ts"],"names":[],"mappings":"","sourcesContent":[""]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8733c2d6d14a6101ad186cdf8a30d2adcf7cdf6e"}}